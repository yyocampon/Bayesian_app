post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
#geom_text(data = data_pos, x = max(x) - 0.05, y = max(y)-0.05 , label = "Texto flotante1")
geom_text(data = data_pos, x = 9.5, y = 2, label = "Texto flotante1")
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
#gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
posterior
}
ggplotly(fx_pois(500,10,1,0.5))
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0.01,0.99,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
#geom_text(data = data_pos, x = max(x) - 0.05, y = max(y)-0.05 , label = "Texto flotante1")
geom_text(data = data_pos, x = max(data_pos$x) - 0.05, y = max(data_pos$y)-0.05 , label = "Texto flotante1")
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
#gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
posterior
}
fx_pois(500,10,1,0.5)
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0.01,0.99,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
#geom_text(data = data_pos, x = max(x) - 0.05, y = max(y)-0.05 , label = "Texto flotante1")
geom_text(data = data_pos, x = mean(data_pos$x) + sd(data_pos$x), y = mean(data_pos$y) + sd(data_pos$y) , label = media_posterior)
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
#gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
posterior
}
fx_pois(500,10,1,0.5)
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0.01,0.99,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
#geom_text(data = data_pos, x = max(x) - 0.05, y = max(y)-0.05 , label = "Texto flotante1")
geom_text(data = data_pos, x = mean(data_pos$x) + 2*sd(data_pos$x), y = mean(data_pos$y), label = round(media_posterior,3))
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
#gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
posterior
}
fx_pois(500,10,1,0.5)
paste(“Media:”,3.9,}2sep = “-“)
paste(“Media:”,3.9,sep = “-“)
cat("texto", 5, "texto", 6)
cat("texto", variable, "\ntexto", variable)
cat("texto",4, "\ntexto", 5)
cat("Media:", media_posterior, "\nalpha:", alpha_pos, "\nbeta_pos", beta_pos)
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0,1,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
annotate("text", x = mean(data_pos$x) + 3*sd(data_pos$x),
y = mean(data_pos$y),
label = paste("μ:", round(media_posterior,3),
"\n α:",round(alpha_pos,3),
"\n β:",round(beta_pos,3)))
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
}
fx_pois(500,10,1,0.5)
library(ggplot2)
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0,1,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
annotate("text", x = mean(data_pos$x) + 3*sd(data_pos$x),
y = mean(data_pos$y),
label = paste("μ:", round(media_posterior,3),
"\n α:",round(alpha_pos,3),
"\n β:",round(beta_pos,3)))
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
}
fx_pois(500,10,1,0.5)
# Función para graficar modelo conjugado poisson
fx_pois = function(nobs, theta_m, alpha_0, beta_0){
## Likelihood:
like_pois_original <- rpois(n = 10000, lambda = theta_m)
## Prior:
#prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = 1/beta_0)
prior_pois <- rgamma(n = 10000, shape = alpha_0, rate = beta_0)
## Posterior:
like_pois <- sample(like_pois_original,size = nobs)
alpha_pos <- sum(like_pois) + alpha_0
beta_pos <- nobs + beta_0
# post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = 1/beta_pos)
post_pois <- rgamma(n = 10000, shape = alpha_pos, rate = beta_pos)
#### Posterior quantile:
x = seq(0.001,1,length.out = 10000)
post_quantile = qgamma(p = x, shape = alpha_pos, rate = beta_pos)
den_post_quantile = dgamma(post_quantile, shape = alpha_pos, rate = beta_pos)
P = ecdf(post_quantile)
df4 = data.frame(post_quantile,den_post_quantile)
df4_red = df4[df4$post_quantile<post_quantile[min(which(P(post_quantile) > 0.99))],]
### Graphics
## Likelihood:
datos_like <- data.frame(x = like_pois_original, y = dpois(like_pois_original,theta_m))
likelihood <- ggplot(data = data.frame(x =  datos_like[ ,1],
y =  datos_like[ ,2],
yend = rep(0,length( datos_like[,1]))),
aes(x = x, y = y, xend = x, yend = yend)) +
geom_point(color = "blue") +
geom_segment(color = "blue") +
scale_x_continuous(name="\nx",
breaks=seq(min(datos_like[ ,1]),max( datos_like[ ,1]), by = ceiling((max(datos_like[,1]) - min(datos_like[,1]))/5)),
limits = c((min(datos_like[,1])-0.5), (max(datos_like[ ,1])+.05))) +
scale_y_continuous(name="Densidad\n",
limits = c(0.0,(max( datos_like[ ,2]+.05)))) +
ggtitle("Poisson Likelihood") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size = 10))
#data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = 1/beta_0))
## A priori:
data_prior <- data.frame(x = prior_pois, y = dgamma(prior_pois,shape = alpha_0, rate = beta_0))
prior <- ggplot(data = data_prior, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Prior distribution", y = "Densidad")
#data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = 1/beta_pos))
# Posterior:
data_pos <- data.frame(x = post_pois, y = dgamma(post_pois,shape = alpha_pos, rate = beta_pos))
media_posterior = alpha_pos/beta_pos
posterior <- ggplot(data = data_pos, aes(x = x, y = y)) +
geom_line(color = "blue", size = 0.8) + theme_bw() +
labs(title = "Posterior distribution", y = "Densidad")+
geom_vline(xintercept = media_posterior) +
annotate("text", x = mean(data_pos$x) + 3*sd(data_pos$x),
y = mean(data_pos$y),
label = paste("μ:", round(media_posterior,3),
"\n α:",round(alpha_pos,3),
"\n β:",round(beta_pos,3)))
posterior_q = ggplot(data = df4_red, aes(post_quantile,den_post_quantile))+
geom_line(size = 0.8, color = 3) +
labs(y= "Densidad", x="x")+
ggtitle("Posterior con cuantiles") +
geom_vline(xintercept = media_posterior) +
theme_bw()
#return(list(likelihood, prior,posterior,posterior_q))
gridExtra::grid.arrange(likelihood,prior,posterior,posterior_q, nrow =2)
}
fx_pois(500,10,1,0.5)
fx_pois(50,8,2,2)
fx_pois(500,28,3,1)
fx_pois(5,2,1,1)
fx_pois(5000,150,3,1.2)
fx_pois(50,25,1,2)
shiny::runApp()
runApp()
getwd()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
setwd()
list.files()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list.files()
runApp()
shiny::runApp()
runApp()
setwd("C:/Users/Usuario/OneDrive/Escritorio/Bayesian_app/Bayesian_app")
runApp()
runApp()
runApp()
rm(g2)
rm(den_post_quantile)
rm(P)
rm(xx)
rm(x)
rm(post_quantile)
shiny::runApp()
runApp()
dir()
dir(Imágenes)
getwd()
runApp()
setwd("~/")
setwd("C:/Users/Usuario/OneDrive/Escritorio/Bayesian_app/Bayesian_app")
shiny::runApp()
runApp()
library(htmltools)
library(htmlwidgets)
runApp()
detach("package:htmltools", unload = TRUE)
runApp()
library(htmltools)
detach("package:htmlwidgets", unload = TRUE)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
